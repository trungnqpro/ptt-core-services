testUnit:
  type: object
  properties:
    id:
      $ref: '#/fields/id'
    status:
      $ref: '#/fields/status'
    score:
      $ref: '#/fields/score'
    timeAllowed:
      $ref: '#/fields/timeAllowed'
    questions:
      $ref: '#/fields/questions'
    subjectId:
      $ref: '#/fields/subjectId'
    passMark:
      $ref: '#/fields/passMark'
    testUnitId:
      $ref: '#/fields/testUnitId'
    studentId:
      $ref: '#/fields/studentId'
    answers:
      $ref: '#/fields/answers'
    createdAt:
      $ref: '#/fields/createdAt'
    updatedAt:
      $ref: '#/fields/updatedAt'

model:
  type: object
  properties:
    id:
      $ref: '#/fields/id'
    status:
      $ref: '#/fields/status'
    questions:
      $ref: '#/fields/questions'
    subjectId:
      $ref: '#/fields/subjectId'
    testUnitId:
      $ref: '#/fields/testUnitId'
    studentId:
      $ref: '#/fields/studentId'
    answers:
      $ref: '#/fields/answers'
    createdAt:
      $ref: '#/fields/createdAt'
    updatedAt:
      $ref: '#/fields/updatedAt'

startTest:
  type: object
  properties:
    testId:
      $ref: '#/fields/id'
    subjectId:
      $ref: '#/fields/subjectId'

createTestUnit:
  type: object
  properties:
    questionsIds:
      $ref: '#/fields/questionsIds'
    difficultLevels:
      $ref: '#/fields/difficultLevels'
    score:
      $ref: '#/fields/score'
    timeAllowed:
      $ref: '#/fields/timeAllowed'
    passMark:
      $ref: '#/fields/passMark'

submitTestAnswer:
  type: object
  properties:
    answer:
      $ref: '#/fields/answer'

createTestStudent:
  type: object
  properties:
    testUnitId:
      $ref: '#/fields/testUnitId'

fields:
  id:
    type: string
    description: id words of test
  subjectId:
    type: string
    description: Subject Id of test
  testUnitId:
    type: string
    description: test Unit Id of test
  questions:
    type: array
    description: return information of the Instructor person
    items:
      type: object
      properties:
        id:
          type: string
          description: id of question in bank
        type:
          type: string
          description: type of question
        question:
          type: string
          description: question
        difficultLevel:
          type: number
          description: difficultLevel (number)
        hint:
          type: string
          description: hint answer
        explanation:
          type: string
          description: explanation
          format: string
        status:
          type: string
          description: status (published, draft, deleted)
          format: string
        options:
          type: array
          description: Returns the answer if the question is not match
          items:
            type: object
            properties:
              code:
                type: number
                description: code
              value:
                type: string
                description: code
        leftOptions:
          type: array
          description: Returns the answer if the question is match
          items:
            type: object
            properties:
              code:
                type: number
                description: code
              value:
                type: string
                description: code
        rightOptions:
          type: array
          description: Returns the answer if the question is match
          items:
            type: object
            properties:
              code:
                type: number
                description: code
              value:
                type: string
                description: code
  answer:
    type: array
    description: Answer of test
    items:
      type: object
      properties:
        answer:
          type: string
          description: code
        questionId:
          type: string
          description: code
  passMark:
    type: number
    description: Pass mark Id of test
  timeAllowed:
    type: number
    description: Test Unit Id of test
  rightOptions:
    type: array
    description: Returns the answer if the question is match
    items:
      type: object
      properties:
        code:
          type: number
          description: code
        value:
          type: string
          description: code
  answers:
    type: array
    description: return information of the Instructor person
    items:
      type: object
      properties:
        _id:
          type: string
          description: _id of answers
        questionId:
          type: string
          description: questionId of answers
        answer:
          type: array
          description: answer of question
          items:
            type: string
            description: answer
        isTrue:
          type: boolean
          description: isTrue of answers
  difficultLevels:
    type: array
    description: Difficult Levels of test
    items:
      type: object
      properties:
        number:
          type: number
          description: number of Difficult Levels
        difficultLevels:
          type: string
          description: difficultLevels of Difficult Levels
  questionsIds:
    type: array
    description: questions Ids of test
    items:
      type: string
      description: answer
  studentId:
    type: string
    description: studentId of test
  score:
    type: number
    description: Score number of test
  status:
    type: string
    description: status of test
    enum:
      - new
      - in-progress
      - done
  createdAt:
    type: string
    description: createdAt
    format: date-time
  updatedAt:
    type: string
    description: updatedAt
    format: date-time
